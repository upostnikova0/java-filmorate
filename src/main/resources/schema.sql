DROP TABLE IF EXISTS MPA_RATING, GENRES, FILMS, FILM_GENRES, USERS, LIKES, USER_FRIENDS CASCADE;

CREATE TABLE IF NOT EXISTS MPA_RATING (
    mpa_rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_rating_name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS GENRES (
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS FILMS (
    film_id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description VARCHAR(200),
    release_date DATE,
    duration LONG,
    mpa_rating_id INTEGER REFERENCES MPA_RATING(mpa_rating_id)
);

CREATE TABLE IF NOT EXISTS FILM_GENRES (
    film_id LONG NOT NULL REFERENCES FILMS (film_id),
    genre_id INTEGER NOT NULL REFERENCES GENRES (genre_id),
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS USERS (
    user_id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    login VARCHAR(100) NOT NULL UNIQUE,
    name VARCHAR(100),
    birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS LIKES (
    film_id LONG NOT NULL REFERENCES FILMS (film_id),
    user_id LONG NOT NULL REFERENCES USERS (user_id),
    PRIMARY KEY (film_id)
);

CREATE TABLE IF NOT EXISTS USER_FRIENDS (
    user_id bigint REFERENCES USERS (user_id),
    friend_id bigint REFERENCES USERS (user_id)
);